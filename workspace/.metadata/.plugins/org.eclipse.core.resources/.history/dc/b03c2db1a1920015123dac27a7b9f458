import lejos.nxt.LCD;
import lejos.nxt.Motor;

public class Steering {

	private int neutral;
	private int leftMax=2000;
	private int rightMax=2000;
	
	
	public void calibrateSteering(){
	
		Motor.B.resetTachoCount();
		Motor.B.backward();
		while(Motor.B.isMoving()){
			refreshLCD();
			leftMax=Motor.B.getTachoCount();
		}
		Motor.B.stop();
		Motor.B.forward();
		while(Motor.B.isMoving()){
			refreshLCD();
			rightMax=Motor.B.getTachoCount();
			//sleep(250);
		}
		refreshLCD();
		Motor.B.stop();
		Motor.B.rotateTo(neutral);
		sleep(500);
		Motor.B.stop();
		neutral = rightMax-((Math.abs(leftMax)+Math.abs(rightMax))/2)+2;
		LCD.clear();
		LCD.drawInt(neutral, 1, 1);
	}
	
	public void setNeutral(){
		Motor.B.rotateTo(neutral);
	}
	
	public void turnLeft(int degrees){
		int newDegree = Motor.B.getTachoCount() - degrees;
		if(newDegree<leftMax){
			newDegree=leftMax;
		}
		Motor.B.rotateTo(newDegree);
	}
	
	public void turnRight(int degrees){
		int newDegree = Motor.B.getTachoCount() + degrees;
		if(newDegree>rightMax){
			newDegree=rightMax;
		}
		Motor.B.rotateTo(newDegree);
	}
	
	public void sleep(int sleep){
		try {
			Thread.sleep(sleep);
		} catch (InterruptedException e) {
			e.printStackTrace();
		}
	}
	private void refreshLCD(){
		LCD.clear();
		LCD.drawString("Calibrate Steering", 0, 1);
		LCD.drawString("CurrentTachoCount", 0, 2);
		LCD.drawInt(Motor.B.getTachoCount(), 0, 3);
		LCD.drawString("Current rightMax", 0, 4);
		LCD.drawInt(rightMax, 0, 5);
		LCD.drawString("Current leftMax", 0, 6);
		LCD.drawInt(leftMax, 0, 7);
	}
	
	
}
